{"version":3,"sources":["atoms/mapcard.tsx","organisms/modal.tsx","atoms/groupdetails.tsx","organisms/map.tsx","utils/config.ts","App.tsx","utils/routing.tsx","index.tsx","assets/svg/left-arrow.svg","assets/svg/date.svg","assets/svg/writing.svg","assets/svg/marker.svg","assets/svg/location.svg","assets/svg/study.svg","assets/png/logo.png"],"names":["MapCardComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_onChildClick","selectG","data","state","title","react_default","a","createElement","Fragment","className","onClick","src","marker","alt","React","Component","customStyles","content","top","left","right","bottom","width","marginRight","transform","Modal","setAppElement","groupModalComponent","rootRef","firebase","ref","child","componentDidMount","on","snap","groupsObject","val","groupList","keys","map","key","objectSpread","uid","setState","items","onAuthStateChanged","user","loggedIn","getLocation","selectedDetail","concat","objects","dates","operationDate","submitNewItem","_this$state","selecteditem","push","then","resp","notify","show","day","time","catch","error","additem","_this$state2","item","actionStatus","name","location","phoneNumber","emailAddress","long","lat","update","removeGrouping","remove","removingOperationDate","manageDetail","details","headerText","actionBtn","afterModalClosed","backAction","loginAuth","asyncToGenerator","regenerator_default","mark","_callee","login","wrap","_context","prev","next","signInWithEmailAndPassword","email","password","stop","logoutAuth","_callee2","_context2","signOut","closeModal","modalIsOpen","openModal","bind","assertThisInitialized","_this2","_this$state3","react_modal_lib_default","isOpen","onAfterClose","onRequestClose","style","contentLabel","value","onChange","e","target","placeholder","cursor","backarrow","group","edit","dated","type","GroupDetailsComponent","myRef","activateModal","current","sendMessage","contact","message","getOperationDates","lists","operationDates","window","href","createRef","modal","distance","date","study","length","logo","color","rows","MapComponent","getCurrentLocation","getLocationDetails","dist","groups","refinedResults","coordinates","groupsNearYou","start","latitude","longitude","forEach","end","calculateDistance","toFixed","haversine","navigator","geolocation","getCurrentPosition","position","coords","center","lng","defaultProps","locationStatus","selectedItem","selectedGroup","getDirection","url","open","beforeCloseModal","googleUrl","accuracy","altitude","altitudeAccuracy","heading","speed","zoom","lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","mapcard","text","groupdetails","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","config","App","notify_default","routing","react_router_dom","react_router","exact","path","component","ReactDOM","render","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c5e55c78.chunk.js","sourcesContent":["import React from \"react\";\nimport marker from \"../assets/svg/marker.svg\";\n\ntype State = {\n  title: string\n};\ntype Props = {\n    lat: any,\n    lng: any,\n    text: string,\n    data: any,\n    selectG: any\n};\n\nclass MapCardComponent extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n        title: \"\",\n    };\n  }\n\n  _onChildClick = () => {\n    this.props.selectG(this.props.data);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"map-card-items\" onClick={this._onChildClick}>\n            <img className=\"church-icon\" src={marker} alt=\"church icon\" />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MapCardComponent;\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport edit from \"../assets/svg/writing.svg\";\nimport backarrow from \"../assets/svg/left-arrow.svg\";\nimport * as firebase from \"firebase\";\nimport { notify } from \"react-notify-toast\";\n\n// https://github.com/reactjs/react-modal\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    width: \"40%\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\n\nModal.setAppElement(\"#root\");\n\ntype State = {\n  modalIsOpen: boolean,\n  headerText: string,\n  actionStatus: string,\n  selecteditem: any,\n  loggedIn: boolean,\n  items: any[],\n  actionBtn: string,\n  login: {\n    email: string,\n    password: any\n  },\n  dates: {\n    day: string,\n    time: any\n  },\n  item: {\n    uid?: any,\n    name: string,\n    location: string,\n    phoneNumber: string,\n    long: string,\n    lat: string,\n    emailAddress: string,\n    operationDate?: any\n  },\n  operationDate: Day[]\n};\ntype Props = {};\n\ninterface Day {\n  uid?: any;\n  day: string;\n  time: any;\n}\n\nclass groupModalComponent extends React.Component<Props, State> {\n  private rootRef = firebase.database().ref().child('location');\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      modalIsOpen: false,\n      headerText: \"Location Awareness\",\n      actionStatus: \"POST\",\n      actionBtn: \"SAVE RECORD\",\n      login: {\n        email: \"contactapp@contactapp.com\",\n        password: \"contactapp@contactapp.com\"\n      },\n      selecteditem: {},\n      loggedIn: false,\n      dates: {\n        day: \"\",\n        time: \"\"\n      },\n      item: {\n        uid: \"\",\n        name: \"\",\n        location: \"\",\n        long: \"\",\n        lat: \"\",\n        phoneNumber: \"\",\n        emailAddress: \"\",\n        operationDate: []\n      },\n      items: [],\n      operationDate: []\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.rootRef.on(\"value\", snap => {\n      const groupsObject = snap.val();\n\n      if (groupsObject) {\n        const groupList = Object.keys(groupsObject).map(key => ({\n          ...groupsObject[key],\n          uid: key\n        }));\n        this.setState({\n          items: groupList\n        });\n      } else {\n        this.setState({ items: [] });\n      }\n    });\n\n    // check firebase auth\n    firebase.auth().onAuthStateChanged((user: any) => {\n      if (user) {\n        this.setState({\n          loggedIn: true\n        });\n      } else {\n        this.setState({\n          loggedIn: false\n        });\n      }\n    });\n  };\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  getLocation = (selectedDetail: any) => {\n    const operationDate = this.rootRef.child(`${selectedDetail.uid}/operationDate`);\n\n    operationDate.on(\"value\", snap => {\n      const objects = snap.val();\n\n      if (objects) {\n        const dates = Object.keys(objects).map(key => ({\n          ...objects[key],\n          uid: key\n        }));\n        this.setState({\n          operationDate: dates\n        });\n      } else {\n        this.setState({ operationDate: [] });\n      }\n    });\n  };\n\n  submitNewItem = () => {\n    const { dates, selecteditem } = this.state;\n    const operationDate = this.rootRef.child(`${selecteditem.uid}/operationDate`);\n\n    operationDate\n      .push(dates)\n      .then(resp => {\n        notify.show(\"Operation date added successfully!\", \"success\");\n        this.setState({\n          dates: {\n            day: \"\",\n            time: \"\"\n          }\n        });\n      })\n      .catch(error => {\n        notify.show(\"Issue adding operation date!\", \"error\");\n      });\n  };\n\n  additem = () => {\n    const { item, actionStatus, selecteditem } = this.state;\n\n    if (actionStatus === \"POST\") {\n      this.rootRef\n        .push(item)\n        .then(resp => {\n          notify.show(\"Information added successfully!\", \"success\");\n          this.setState({\n            item: {\n              uid: \"\",\n              name: \"\",\n              location: \"\",\n              phoneNumber: \"\",\n              emailAddress: \"\",\n              long: \"\",\n              lat: \"\"\n            }\n          });\n        })\n        .catch(error => {\n          notify.show(\"Issue adding information!\", \"error\");\n        });\n    } else {\n      delete item.uid;\n      const itemChild = this.rootRef.child(selecteditem.uid);\n      itemChild\n        .update(item)\n        .then(resp => {\n          notify.show(\"Information updated successfully!\", \"success\");\n        })\n        .catch(error => {\n          notify.show(\"Issue updating information!\", \"error\");\n        });\n    }\n  };\n\n  removeGrouping = (uid: any) => {\n    this.rootRef\n      .child(uid)\n      .remove()\n      .then(resp => {\n        notify.show(\"Life group removed successfully!\", \"success\");\n      })\n      .catch(error => {\n        notify.show(\"Issue removing life group!\", \"error\");\n      });\n  };\n\n  removingOperationDate = (uid: any) => {\n    const { selecteditem } = this.state;\n    const operationDate = this.rootRef.child(`${selecteditem.uid}/operationDate`);\n\n    operationDate\n      .child(uid)\n      .remove()\n      .then(resp => {\n        notify.show(\"Date removed successfully!\", \"success\");\n      })\n      .catch(error => {\n        notify.show(\"Issue removing operation date!\", \"error\");\n      });\n  };\n\n  manageDetail = (details: any) => {\n    this.getLocation(details);\n\n    this.setState({\n      selecteditem: details,\n      headerText: \"Operation Dates\",\n      item: details,\n      actionStatus: \"UPDATE\",\n      actionBtn: \"UPDATE RECORD\"\n    });\n  };\n\n  afterModalClosed = () => {\n    this.setState({\n      headerText: \"Hope church groups\",\n      actionStatus: \"POST\",\n      actionBtn: \"SAVE RECORD\",\n      selecteditem: {},\n      item: {\n        uid: \"\",\n        name: \"\",\n        location: \"\",\n        phoneNumber: \"\",\n        emailAddress: \"\",\n        long: \"\",\n        lat: \"\"\n      }\n    });\n  };\n\n  backAction = () => {\n    this.setState({\n      headerText: \"Hope church groups\",\n      actionStatus: \"POST\",\n      actionBtn: \"SAVE RECORD\",\n      selecteditem: {},\n      item: {\n        uid: \"\",\n        name: \"\",\n        location: \"\",\n        phoneNumber: \"\",\n        emailAddress: \"\",\n        long: \"\",\n        lat: \"\"\n      }\n    });\n  };\n\n  loginAuth = async () => {\n    const { login } = this.state;\n    await firebase\n      .auth()\n      .signInWithEmailAndPassword(login.email, login.password)\n      .then(resp => {\n        notify.show(\"Login successful!\", \"success\");\n      })\n      .catch((error: any) => {\n        notify.show(\"Issue with you login credentials!\", \"error\");\n      });\n  };\n\n  logoutAuth = async () => {\n    await firebase\n      .auth()\n      .signOut()\n      .then(resp => {\n        notify.show(\"Logged out successfully!\", \"success\");\n        this.closeModal();\n      })\n      .catch((error: any) => {\n        notify.show(\"Issue login out\", \"error\");\n      });\n  };\n\n  // handleValidation = (event: any) => {\n  // state: -------\n  // errors: {\n  //   fullName: '',\n  //   email: '',\n  //   password: '',\n  // }\n  // ------- : state\n  //   event.preventDefault();\n  //   const { name, value } = event.target;\n  //   let errors = this.state.errors;\n\n  //   switch (name) {\n  //     case 'fullName':\n  //       errors.fullName =\n  //         value.length < 5\n  //           ? 'Full Name must be 5 characters long!'\n  //           : '';\n  //       break;\n  //     case 'email':\n  //       errors.email =\n  //         validEmailRegex.test(value)\n  //           ? ''\n  //           : 'Email is not valid!';\n  //       break;\n  //     case 'password':\n  //       errors.password =\n  //         value.length < 8\n  //           ? 'Password must be 8 characters long!'\n  //           : '';\n  //       break;\n  //     default:\n  //       break;\n  //   }\n\n  //   this.setState({errors, [name]: value}, ()=> {\n  //       console.log(errors)\n  //   })\n  // }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  render() {\n    const { items, headerText, actionStatus, actionBtn, item, operationDate, dates, loggedIn } = this.state;\n\n    return (\n      <React.Fragment>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onAfterClose={this.afterModalClosed}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel=\"Dashboard\"\n        >\n          <div className=\"modal-inner-wrap\">\n            {loggedIn ? (\n              <React.Fragment>\n                <h1 onClick={this.logoutAuth} className=\"logout\">\n                  LOGOUT →\n                </h1>\n                <div className=\"modal-left-view\">\n                  <div className=\"form-groups\">\n                    <label className=\"form-labels\">Name</label>\n                    <input\n                      className=\"form-inputs\"\n                      value={item.name}\n                      onChange={e =>\n                        this.setState({\n                          item: {\n                            ...this.state.item,\n                            name: e.target.value\n                          }\n                        })\n                      }\n                      placeholder=\"The Bereans\"\n                    />\n                  </div>\n\n                  <div className=\"form-groups\">\n                    <label className=\"form-labels\">Phone Number</label>\n                    <input\n                      className=\"form-inputs\"\n                      value={item.phoneNumber}\n                      onChange={e =>\n                        this.setState({\n                          item: {\n                            ...this.state.item,\n                            phoneNumber: e.target.value\n                          }\n                        })\n                      }\n                      placeholder=\"+2546 xxxx xxxx\"\n                    />\n                  </div>\n\n                  <div className=\"form-groups\">\n                    <label className=\"form-labels\">Email Address</label>\n                    <input\n                      className=\"form-inputs\"\n                      value={item.emailAddress}\n                      onChange={e =>\n                        this.setState({\n                          item: {\n                            ...this.state.item,\n                            emailAddress: e.target.value\n                          }\n                        })\n                      }\n                      placeholder=\"username@somewhere.com\"\n                    />\n                  </div>\n\n                  <div className=\"form-groups\">\n                    <label className=\"form-labels\">Physical Address</label>\n                    <input\n                      className=\"form-inputs\"\n                      value={item.location}\n                      onChange={e =>\n                        this.setState({\n                          item: {\n                            ...this.state.item,\n                            location: e.target.value\n                          }\n                        })\n                      }\n                      placeholder=\"59 Hse Kali Estate\"\n                    />\n                  </div>\n\n                  <div className=\"form-groups\">\n                    <label className=\"form-labels\">Latitude</label>\n                    <input\n                      className=\"form-inputs\"\n                      value={item.lat}\n                      onChange={e =>\n                        this.setState({\n                          item: {\n                            ...this.state.item,\n                            lat: e.target.value\n                          }\n                        })\n                      }\n                      placeholder=\"-5.5833995\"\n                    />\n                  </div>\n\n                  <div className=\"form-groups\">\n                    <label className=\"form-labels\">Longitude</label>\n                    <input\n                      className=\"form-inputs\"\n                      value={item.long}\n                      onChange={e =>\n                        this.setState({\n                          item: {\n                            ...this.state.item,\n                            long: e.target.value\n                          }\n                        })\n                      }\n                      placeholder=\"596904840\"\n                    />\n                  </div>\n\n                  <div className=\"form-groups\">\n                    <button className=\"form-btns\" onClick={this.additem}>\n                      {actionBtn}\n                    </button>\n                    <button className=\"form-btns danger\" onClick={this.closeModal}>\n                      ABORT ACTION\n                    </button>\n                  </div>\n                </div>\n                <div className=\"modal-right-view\">\n                  {actionStatus === \"UPDATE\" && (\n                    <img className=\"file-icon\" style={{ cursor: \"pointer\" }} src={backarrow} onClick={this.backAction} alt=\"file icon\" />\n                  )}\n                  <h4>{headerText}</h4>\n                  <div className=\"groups-divider\"></div>\n                  <div className=\"form-groups\">\n                    <div className=\"files-area\">\n                      <ul className=\"files-inner-area detailed-list-area\">\n                        {actionStatus === \"POST\" ? (\n                          <React.Fragment>\n                            {items.map(group => (\n                              <li key={group.uid} className=\"files-item\">\n                                <img className=\"file-icon\" src={edit} onClick={this.manageDetail.bind(this, group)} alt=\"file icon\" />\n                                <p className=\"file-text\">{group.name}</p>\n                                <p onClick={this.removeGrouping.bind(this, group.uid)} className=\"remove-file\">\n                                  x\n                                </p>\n                              </li>\n                            ))}\n                          </React.Fragment>\n                        ) : (\n                          <React.Fragment>\n                            <div>\n                              <div className=\"add-detail-inner-cover\">\n                                <input\n                                  className=\"form-inputs input-left-detail\"\n                                  value={dates.day}\n                                  onChange={e =>\n                                    this.setState({\n                                      dates: {\n                                        ...this.state.dates,\n                                        day: e.target.value\n                                      }\n                                    })\n                                  }\n                                  placeholder=\"Monday - Friday\"\n                                />\n                                <input\n                                  className=\"form-inputs\"\n                                  value={dates.time}\n                                  onChange={e =>\n                                    this.setState({\n                                      dates: {\n                                        ...this.state.dates,\n                                        time: e.target.value\n                                      }\n                                    })\n                                  }\n                                  placeholder=\"Opening - closing time\"\n                                />\n                              </div>\n                              <div className=\"action-btn-add-detail\">\n                                <button className=\"new-detail-btn\" onClick={this.submitNewItem}>\n                                  + ADD OPERATION DATE\n                                </button>\n                              </div>\n                            </div>\n                            {operationDate.map(dated => (\n                              <li key={dated.uid} className=\"files-item\">\n                                <img className=\"file-icon\" src={edit} alt=\"file icon\" />\n                                <p className=\"file-text\">\n                                  {dated.day}: <span className=\"phoneNumberValue\">{dated.time}</span>\n                                </p>\n                                <p onClick={this.removingOperationDate.bind(this, dated.uid)} className=\"remove-file\">\n                                  x\n                                </p>\n                              </li>\n                            ))}\n                          </React.Fragment>\n                        )}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <div className=\"account-cover\">\n                  <div className=\"account-title\">\n                    <h1 className=\"account-title-text\">\n                      Sign in | <span className=\"account-title-sub-text\">Company Name</span>\n                    </h1>\n                  </div>\n                  <div className=\"account-box\">\n                    {/* <form> */}\n                    <div className=\"form-groups\">\n                      <label className=\"labels\">Email Address</label>\n                      <input\n                        type=\"text\"\n                        onChange={e =>\n                          this.setState({\n                            login: {\n                              ...this.state.login,\n                              email: e.target.value\n                            }\n                          })\n                        }\n                        className=\"form-inputs\"\n                        placeholder=\"username@somewhere.com\"\n                      />\n                    </div>\n                    <div className=\"form-groups\">\n                      <label className=\"labels\">Password</label>\n                      <input\n                        type=\"password\"\n                        onChange={e =>\n                          this.setState({\n                            login: {\n                              ...this.state.login,\n                              password: e.target.value\n                            }\n                          })\n                        }\n                        className=\"form-inputs\"\n                        placeholder=\"*********\"\n                      />\n                    </div>\n                    <div className=\"form-groups\">\n                      <button className=\"form-btns\" onClick={this.loginAuth}>\n                        Login\n                      </button>\n                    </div>\n                    {/* </form> */}\n                  </div>\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default groupModalComponent;\n","import React from \"react\";\nimport location from \"../assets/svg/location.svg\";\nimport date from \"../assets/svg/date.svg\";\nimport study from \"../assets/svg/study.svg\";\nimport logo from \"../assets/png/logo.png\";\nimport LocationModal from \"../organisms/modal\";\nimport * as firebase from \"firebase\";\nimport { notify } from \"react-notify-toast\";\nimport backarrow from \"../assets/svg/left-arrow.svg\";\n\ntype State = {\n  title: string,\n  operationDates: any[],\n  contact: Contct\n};\ntype Props = {\n  group: any\n};\n\ninterface Contct {\n  emailAddress: string;\n  message: string;\n}\n\nclass GroupDetailsComponent extends React.Component<Props, State> {\n    private rootRef = firebase.database().ref().child('location');\n\n    private myRef: any;\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      contact: {\n        emailAddress: \"\",\n        message: \"\"\n      },\n      operationDates: [],\n      title: \"\"\n    };\n    this.myRef = React.createRef();\n  }\n\n  activateModal = () => {\n    this.myRef.current.openModal();\n  };\n\n  sendMessage = () => {\n    const { contact } = this.state;\n\n    if (contact.emailAddress === \"\" || contact.message === \"\") {\n      notify.show(\"All fields must be filled!\", \"error\");\n    } else {\n      // ready to send to the server back end\n      notify.show(\"Message sent successfully\", \"success\");\n    }\n  };\n\n  getOperationDates = () => {\n    const { group } = this.props;\n    const operationDates = this.rootRef.child(`${group.uid}/operationDate`);\n\n    operationDates.on(\"value\", snap => {\n      const objects = snap.val();\n\n      if (objects) {\n        const lists = Object.keys(objects).map(key => ({\n          ...objects[key],\n          uid: key\n        }));\n        this.setState({\n          operationDates: lists\n        });\n      } else {\n        this.setState({ operationDates: [] });\n      }\n    });\n  };\n\n  backAction = () => {\n    window.location.href = \"/\";\n  };\n\n  render() {\n    const { group } = this.props;\n    const { operationDates } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"location-details-details\">\n          <LocationModal ref={this.myRef} />\n          <button onClick={this.activateModal} className=\"btn-get-direction\">\n            ACCESS ACCOUNT\n          </button>\n          {group.name ? (\n            <React.Fragment>\n              {group.distance && (\n                <div className=\"float-distance-cover\">\n                  <div className=\"floating-distance-circle\">\n                    <h1 className=\"floating-distance\">{group.distance} KM</h1>\n                  </div>\n                  <p className=\"floating-distance-text\">Distance from you</p>\n                </div>\n              )}\n\n              <img className=\"file-icon\" style={{ cursor: \"pointer\" }} src={backarrow} onClick={this.backAction} alt=\"file icon\" />\n              <h1 className=\"location-details-header\">{group.name}</h1>\n              <div className=\"location-details-divider\"></div>\n\n              <ul className=\"location-details-items\">\n                <li className=\"location-details-item\">\n                  <div className=\"location-details-sub-item\">\n                    <img className=\"location-details-icons\" src={location} alt=\"location icon\" />\n                    <span className=\"location-details-sub-item-value\">Locations:</span>\n                  </div>\n                  <p className=\"location-details-values\">{group.location}</p>\n                </li>\n                <li className=\"location-details-item\">\n                  <div className=\"location-details-sub-item\">\n                    <img className=\"location-details-icons\" src={date} alt=\"date icon\" />\n                    <span className=\"location-details-sub-item-value\">Email Address:</span>\n                  </div>\n                  <p className=\"location-details-values\">{group.emailAddress}</p>\n                </li>\n                <li className=\"location-details-item\">\n                  <div className=\"location-details-sub-item\">\n                    <img className=\"location-details-icons\" src={study} alt=\"study icon\" />\n                    <span className=\"location-details-sub-item-value\">Phone Number:</span>\n                  </div>\n                  <p className=\"location-details-values\">{group.phoneNumber}</p>\n                </li>\n              </ul>\n\n              <h3 className=\"operation-date-sub-header\">Operation Dates</h3>\n              <div className=\"details-location-divider\"></div>\n\n              {operationDates.length > 0 && (\n                <ul className=\"location-details\">\n                  {operationDates.map(dated => (\n                    <li key={dated.uid} className=\"location-details-list\">\n                      <img className=\"location-details-icons\" src={date} alt=\"check icon\" />\n                      <p className=\"location-details-values\">\n                        {dated.day}\n                        <br />\n                        <span className=\"operation-time\">{dated.time}</span>\n                      </p>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <img className=\"logo\" src={logo} alt=\"logo\" />\n              <h1 className=\"logo-text\" style={{ color: \"#666\" }}>\n                Contact\n              </h1>\n              <p className=\"quote\">\n                “Communication is the solvent of all problems and is the foundation for personal development.” <br />\n              </p>\n              <p className=\"quote-author\">– Peter Shepherd</p>\n              <div className=\"divider\"></div>\n              <div className=\"contact-form\">\n                <div className=\"form-groups\">\n                  <label className=\"labels\">Email Address</label>\n                  <input\n                    type=\"text\"\n                    onChange={e =>\n                      this.setState({\n                        contact: {\n                          ...this.state.contact,\n                          emailAddress: e.target.value\n                        }\n                      })\n                    }\n                    className=\"form-inputs form-input-lg\"\n                    placeholder=\"username@somewhere.com\"\n                  />\n                </div>\n                <div className=\"form-groups\">\n                  <label className=\"labels\">Message</label>\n                  <textarea\n                    rows={10}\n                    onChange={e =>\n                      this.setState({\n                        contact: {\n                          ...this.state.contact,\n                          message: e.target.value\n                        }\n                      })\n                    }\n                    className=\"form-textarea\"\n                    placeholder=\"You message here ..\"\n                  ></textarea>\n                </div>\n                <div className=\"form-groups\">\n                  <button className=\"form-btns-lg\" onClick={this.sendMessage}>\n                    SEND MESSAGE\n                  </button>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GroupDetailsComponent;\n","import React from \"react\";\nimport GoogleMapReact from 'google-map-react';\nimport MapCardComponent from '../atoms/mapcard';\nimport GroupDetailsComponent from '../atoms/groupdetails';\nimport * as firebase from \"firebase\";\nimport haversine from \"haversine\";\n\n// https://github.com/google-map-react/google-map-react/blob/master/README.md\n\ntype State = {\n  items: any[]\n  locationStatus: boolean,\n  googleUrl: string,\n  modalIsOpen: boolean,\n  selectedGroup: any,\n  coordinates: coord,\n  defaultProps: {\n    center: {\n      lat: any,\n      lng: any\n    },\n    zoom: 13\n  };\n};\ntype Props = {};\n\ninterface coord {\n  accuracy: number,\n  altitude: any,\n  altitudeAccuracy: any,\n  heading: any,\n  latitude: any,\n  longitude: any,\n  speed: any\n}\n\nclass MapComponent extends React.Component<Props, State> {\n  private rootRef = firebase.database().ref().child('location');\n  private myRef: any;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      items: [],\n      selectedGroup: {},\n      modalIsOpen: false,\n      googleUrl: \"\",\n      locationStatus: false,\n      coordinates: {\n        accuracy: 0,\n        altitude: \"\",\n        altitudeAccuracy: \"\",\n        heading: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        speed: \"\"\n      },\n      defaultProps: {\n        center: {\n          lat: -1.28333,\n          lng: 36.81667\n        },\n        zoom: 13\n      }\n    };\n\n    this.myRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.getCurrentLocation();\n  };\n\n  getLocationDetails = (dist: number) => {\n    this.rootRef.on(\"value\", snap => {\n      const groupsObject = snap.val();\n\n      if (groupsObject) {\n        const groupList = Object.keys(groupsObject).map(key => ({\n          ...groupsObject[key],\n          uid: key\n        }));\n\n        let groups;\n\n        dist === 1 ? groups = this.refinedResults(groupList) : groups = groupList;\n\n        this.setState({\n          items: groups\n        }, () => {\n          // console.log(this.state.items)\n        });\n      } else {\n        this.setState({ items: [] });\n      }\n    });\n  }\n\n  refinedResults = (items: any) => {\n    const { coordinates } = this.state;\n\n    const groupsNearYou: any = [];\n\n    const start = {\n      latitude: coordinates.latitude,\n      longitude: coordinates.longitude\n    };\n\n    items.forEach((group: any) => {\n      const end = {\n        latitude: group.lat,\n        longitude: group.long\n      };\n\n      let distance = this.calculateDistance(start, end);\n\n      if (distance < 10) {\n        group.distance = distance.toFixed();\n        groupsNearYou.push(group)\n      }\n    });\n\n    return groupsNearYou;\n  }\n\n  calculateDistance = (start: any, end: any) => {\n    return haversine(start, end);\n  }\n\n  getCurrentLocation = async () => {\n    if (!!navigator.geolocation) {\n\n      navigator.geolocation.getCurrentPosition((position: any) => {\n        const coordinates = position.coords;\n        const center = {\n          lat: coordinates.latitude,\n          lng: coordinates.longitude\n        };\n\n        this.getLocationDetails(0);\n        /* Below code: if you want to compare nearby location of a user with the available map items */\n        // coordinates ? this.getLocationDetails(1) : this.getLocationDetails(0);\n        this.setState({\n          defaultProps: { ...this.state.defaultProps, center: center },\n          locationStatus: coordinates ? true : false,\n          coordinates\n        });\n      });\n      // Support\n    } else {\n      this.getLocationDetails(0);\n      // No support\n    }\n  }\n\n  selectedItem = (selectedGroup: any) => {\n    this.setState({\n      selectedGroup\n    }, () => {\n      this.myRef.current.getOperationDates();\n    });\n  }\n\n  getDirection = () => {\n    const { selectedGroup, coordinates } = this.state;\n    const url = `https://www.google.com/maps/dir/?api=1&origin=${coordinates.latitude},${coordinates.longitude}&destination=${selectedGroup.lat},${selectedGroup.long}`;\n\n    window.open(url, '_blank');\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  afterModalClosed = () => {\n    //\n  }\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false });\n  }\n\n  beforeCloseModal = () => {\n    //\n  }\n\n  render() {\n    const { items, locationStatus, selectedGroup } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"map-container\">\n          <div className=\"map\" style={{ position: \"relative\" }}>\n            <div className=\"inner-map\">\n              {items && <GoogleMapReact\n                bootstrapURLKeys={{ key: \"\" }}\n                defaultCenter={this.state.defaultProps.center}\n                center={this.state.defaultProps.center}\n                defaultZoom={this.state.defaultProps.zoom}\n              >\n                {items && items.map((item) => <MapCardComponent\n                  key={item.uid}\n                  lat={item.lat}\n                  lng={item.long}\n                  selectG={this.selectedItem}\n                  data={item}\n                  text={item.name}\n                />)}\n              </GoogleMapReact>}\n            </div>\n          </div>\n          <div className=\"map-item-details\">\n            {(selectedGroup.name && locationStatus) && <div className=\"user-direction\" onClick={this.getDirection}>\n              <h2 className=\"user-direction-text\">GET DIRECTION ↘</h2>\n            </div>}\n            <GroupDetailsComponent ref={this.myRef} group={this.state.selectedGroup} />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MapComponent;\n","const firebaseConfig = {\n  apiKey: \"\",\n  authDomain: \"\",\n  databaseURL: \"\",\n  projectId: \"\",\n  storageBucket: \"\",\n  messagingSenderId: \"\",\n  appId: \"\"\n};\n\nexport default firebaseConfig;","import React from 'react';\nimport './App.scss';\nimport Map from \"./organisms/map\";\nimport firebase from \"firebase/app\";\nimport config from \"./utils/config\";\nimport Notifications from 'react-notify-toast';\n\nfirebase.initializeApp(config);\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"map-section-cover\">\n        <Notifications />\n        <Map></Map>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport App from '../App';\n\nconst routing = (\n    <Router>\n      <div>\n        <Route exact path=\"/\" component={App} />\n      </div>\n    </Router>\n  );\n\nexport default routing;","import ReactDOM from 'react-dom';\nimport './index.scss';\nimport './styles/index.scss';\nimport routing from './utils/routing';\n\nReactDOM.render(routing, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/left-arrow.5920a041.svg\";","module.exports = __webpack_public_path__ + \"static/media/date.525c6713.svg\";","module.exports = __webpack_public_path__ + \"static/media/writing.fce92e01.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker.aff63b15.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.f466789c.svg\";","module.exports = __webpack_public_path__ + \"static/media/study.7ee29816.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.119e9935.png\";"],"sourceRoot":""}